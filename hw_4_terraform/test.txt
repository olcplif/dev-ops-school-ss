terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.27"
    }
  }

  required_version = ">= 1.1.0"
}

provider "aws" {
  profile = "default"
  region  = "eu-west-2"
}

resource "aws_instance" "moodle_server" {
  ami             = "ami-0015a39e4b7c0966f"
  instance_type   = "t2.micro"
  key_name        = "aws_key"
#  subnet_id       = [aws_subnet.public_subnet.id]
  security_groups = [aws_security_group.sg.id]
  user_data = <<-EOF
  #!/bin/bash
  echo "*** Installing apache2"
  sudo apt update -y
  sudo apt install apache2 -y
  echo "*** Completed Installing apache2"
  EOF

  tags = {
    Name = "LAMP Moodle"
  }
}

#resource "tls_private_key" "webt1_private_key" {
#    algorithm   =  "RSA"
#    rsa_bits    =  4096
#}
#resource "local_file" "private_key" {
#    content         =  tls_private_key.webt1_private_key.private_key_pem
#    filename        =  "webserver_key.pem"
#    file_permission =  0400
#}
#resource "aws_key_pair" "task1_key" {
#  key_name   = "task1_key"
#  public_key = tls_private_key.webt1_private_key.public_key_openssh
#}


resource "aws_security_group" "sg" {
  name        = "allow_http"
  description = "Allow http inbound traffic"
  vpc_id      = aws_vpc.app_vpc.id


  ingress {
    description = "http"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

  }
  ingress {
    description = "https"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

  }
  ingress {
    description = "ssh"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }


  tags = {
    Name = "allow_http_https_ssh"
  }
}

resource "aws_key_pair" "deployer" {
  key_name   = "aws_key"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCz3NdNcc3rLPtd+M4k8JjgirD9eJwPuvHWrf/SVPRLVDR62G/CTcuKOXD/3VzgP93IzlgeMJvA2Rt1d9U+WL4+GIp3DqzfLJ7SILr6PFH1ylkTgRaaLA+lq47+fP7iv7MbsG/42voMvhn1UE1vqZeGjYMSTWLBfduqLqng+DNkxfRzf7tgQc4wzcMmtdl3sk83nxIeIY+ldqJ/qkVlyIP68MPze8PwONRgIC+USqBVbUhcWZCz+thmzxEUmyJ0VSxpISz8KwDP+gVs+TnurPs9ESTqfFD2LTiHjW0eOlAoIqeOrZNWQqh9h7RlaHHqOykiUIPlARXMUT6fLkonHukb oleksandr@lenout"
}

#resource "aws_instance" "web" {
#  ami             = "ami-005e54dee72cc1d00"
#  instance_type   = var.instance_type
#  key_name        = var.instance_key
#  subnet_id       = aws_subnet.public_subnet.id
#  security_groups = [aws_security_group.sg.id]
#
#  user_data = <<-EOF
#  #!/bin/bash
#  echo "*** Installing apache2"
#  sudo apt update -y
#  sudo apt install apache2 -y
#  echo "*** Completed Installing apache2"
#  EOF
#
#  tags = {
#    Name = "web_instance"
#  }
#
#  volume_tags = {
#    Name = "web_instance"
#  }
#}